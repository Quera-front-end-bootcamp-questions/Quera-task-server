// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Import model definitions
import { User, userFields } from '../src/Models/User/User.ts';
import { Workspace, workspaceFields } from '../src/Models/Workspace/Workspace.ts';
import { WorkspaceMember, workspaceMemberFields } from '../src/Models/WorkspaceMember/WorkspaceMember.ts';
import { Project, projectFields } from '../src/Models/Project/Project.ts';
import { ProjectMember, projectMemberFields } from '../src/Models/ProjectMember/ProjectMember.ts';
import { Board, boardFields } from '../src/Models/Board/Board.ts';
import { Task, taskFields } from '../src/Models/Task/Task.ts';
import { TaskAssignee, taskAssigneeFields } from '../src/Models/TaskAssignee/TaskAssignee.ts';
import { TaskTag, taskTagFields } from '../src/Models/TaskTag/TaskTag.ts';
import { Comment, commentFields } from '../src/Models/Comment/Comment.ts';
import { Setting, settingFields } from '../src/Models/Setting/Setting.ts';
import { Tag, tagFields } from '../src/Models/Tag/Tag.ts';

// Define Prisma models using imported fields
model User {
  id             Int        @id @default(autoincrement())
  ...userFields
}

model Workspace {
  id         Int           @id @default(autoincrement())
  ...workspaceFields
}

model WorkspaceMember {
  ...workspaceMemberFields

  @@id([userId, workspaceId])
}

model Project {
  id           Int           @id @default(autoincrement())
  ...projectFields
}

model ProjectMember {
  ...projectMemberFields

  @@id([projectId, userId])
}

model Board {
  id         Int      @id @default(autoincrement())
  ...boardFields
}

model Task {
  id          Int        @id @default(autoincrement())
  ...taskFields
}

model TaskAssignee {
  ...taskAssigneeFields

  @@id([taskId, userId])
}

model TaskTag {
  ...taskTagFields

  @@id([taskId, tagId])
}

model Comment {
  id         Int       @id @default(autoincrement())
  ...commentFields
}

model Setting {
  id        Int   @id @default(autoincrement())
  ...settingFields
}

model Tag {
  id    Int     @id @default(autoincrement())
  ...tagFields
}
