{
    "swagger": "2.0",
    "info": {
      "title": "API Documentation",
      "description": "Documentation for API endpoints",
      "version": "1.0.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "schemes": [
      "http",
      "https"
    ],
    "paths": {
      "/auth/register": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Register a new user",
          "description": "Registers a new user with the provided information",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "user",
              "description": "User object",
              "schema": {
                "$ref": "#/definitions/RegisterRequest"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User registered successfully",
              "schema": {
                "$ref": "#/definitions/RegisterResponse"
              }
            },
            "400": {
              "description": "Bad request"
            },
            "409": {
              "description": "Email address is already in use"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Login",
          "description": "Logs in a user with the provided credentials",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "credentials",
              "description": "User credentials",
              "schema": {
                "$ref": "#/definitions/LoginRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "schema": {
                "$ref": "#/definitions/LoginResponse"
              }
            },
            "400": {
              "description": "Invalid email/username or password"
            }
          }
        }
      },
      "/auth/reset-password": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Reset password",
          "description": "Resets the user's password with the provided reset token",
          "consumes": [
            "application/json"
          ],
          "produces": [],
          "parameters": [
            {
              "in": "body",
              "name": "resetData",
              "description": "Reset password data",
              "schema": {
                "$ref": "#/definitions/ResetPasswordRequest"
              }
            }
          ],
          "responses": {}
        }
      },
      "/auth/forget-password": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Forget password",
          "description": "Sends a password reset email to the user's email address",
          "consumes": [
            "application/json"
          ],
          "produces": [],
          "parameters": [
            {
              "in": "body",
              "name": "emailData",
              "description": "Forget password data",
              "schema": {
                "$ref": "#/definitions/ForgetPasswordRequest"
              }
            }
          ],
          "responses": {}
        }
      },
      "/auth/refreshtoken": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "Refresh token",
          "description": "Refreshes the access token with a valid refresh token",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "refreshTokenData",
              "description": "Refresh token data",
              "schema": {
                "$ref": "#/definitions/RefreshTokenRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Refresh token created successfully",
              "schema": {
                "$ref": "#/definitions/RefreshTokenResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "user2"
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "example": "user2@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          },
          "firstname": {
            "type": "string",
            "description": "First name",
            "example": "John"
          },
          "lastname": {
            "type": "string",
            "description": "Last name",
            "example": "Doe"
          },
          "profile_url": {
            "type": "string",
            "description": "Profile image URL",
            "example": "https://example.com/john_doe/profile.jpg"
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "example": "+1-555-555-5555"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "User registered successfully"
          },
          "code": {
            "type": "integer",
            "description": "Code",
            "example": 201
          },
          "error": {
            "type": "boolean",
            "description": "Error status",
            "example": false
          },
          "data": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "Username",
                "example": "user2"
              },
              "firstname": {
                "type": "string",
                "description": "First name",
                "example": "John"
              },
              "lastname": {
                "type": "string",
                "description": "Last name",
                "example": "Doe"
              },
              "email": {
                "type": "string",
                "description": "Email address",
                "example": "user2@gmail.com"
              },
              "profile_url": {
                "type": "string",
                "description": "Profile image URL",
                "example": "https://example.com/john_doe/profile.jpg"
              },
              "phone": {
                "type": "string",
                "description": "Phone number",
                "example": "+1-555-555-5555"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "emailOrUsername": {
            "type": "string",
            "description": "Email or username",
            "example": "user2@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "User logged in successfully"
          },
          "code": {
            "type": "integer",
            "description": "Code",
            "example": 200
          },
          "error": {
            "type": "boolean",
            "description": "Error status",
            "example": false
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "Access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2JiY2E5MWNlZDFkYmZkNDRhM2RkOCIsInVzZXJuYW1lIjoiam9obiIsImVtYWlsIjoic2FsYXIubmlsaTA5N0BnbWFpbC5jb20iLCJpYXQiOjE2ODE2MzcwNzB9.vys-0Syk5Eq4KywH8fMSNyM49cW6P3BiY-bZ3hivR3g"
              }
            }
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Password reset token",
            "example": "abeecc775eb7bdce080cccac07e19351c276a199"
          },
          "password": {
            "type": "string",
            "description": "New password",
            "example": "password123"
          }
        }
      },
      "ForgetPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address",
            "example": "salar.nili097@gmail.com"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2JiY2E5MWNlZDFkYmZkNDRhM2RkOCIsInVzZXJuYW1lIjoiam9obiIsImVtYWlsIjoic2FsYXIubmlsaTA5N0BnbWFpbC5jb20iLCJpYXQiOjE2ODE2MzcwNzB9.vys-0Syk5Eq4KywH8fMSNyM49cW6P3BiY-bZ3hivR3g"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "Refresh token created successfully"
          },
          "code": {
            "type": "integer",
            "description": "Code",
            "example": 200
          },
          "error": {
            "type": "boolean",
            "description": "Error status",
            "example": false
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "New access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2ODUyODU2MjAsImV4cCI6MTY4NTM3MjAyMH0.ziJvhpOE9J-C17xcJDgLBJiNYrnuRmmE9CiWHGW6nfs"
              }
            }
          }
        }
      }
    }
  }
  